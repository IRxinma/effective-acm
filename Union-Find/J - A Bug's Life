#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cmath>
#include<cstring>
#include<queue>
#include<cstdlib>
#include<stack>
#include<climits>
#include<vector>
#include<string>
#include<map>
using namespace std;
const int maxn = 2010;
int pre[maxn];
bool r[maxn];
int t, n, m, a, b, flag;
int find_set(int x){
    if(x==pre[x]) return x;
    int tmp=find_set(pre[x]);
    r[x]^=r[pre[x]];
    return pre[x]=tmp;
}
bool union_set(int x, int y){
    int fx=find_set(x);
    int fy=find_set(y);
    if(fx==fy){
        if(r[x]==r[y]) flag=false;
    }
    else{
        pre[fy]=fx;
        r[fy]=r[x]^1^r[y];
    }
}
int main(){
    scanf("%d", &t);
    for(int i=1; i<=t; i++){
        scanf("%d%d", &n, &m);
        for(int j=1; j<=n; j++){
            pre[j]=j; r[j]=false;
        }
        flag=true;
        for(int j=1; j<=m; j++){
            scanf("%d%d", &a, &b);
            if(flag) union_set(a, b);
        }
        printf("Scenario #%d:\n", i);
        if(flag) printf("No suspicious bugs found!\n");
        else printf("Suspicious bugs found!\n");
        printf("\n");
    }
    return 0;
}
