#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cmath>
#include<cstring>
#include<queue>
#include<cstdlib>
#include<stack>
#include<climits>
#include<vector>
#include<string>
#include<map>
using namespace std;
/*
meaning of the questions:
there ane n number of farms and through every road in the time requested. Expet X, others' cows must come X
farm. Ask their respective all cattle in the shortest period of time that is how much to spend maximum time.
*/
#define P pair<int, int>
const int maxn = 1010;
const int inf = 0x3f3f3f3f;
struct node{
    int b, w;
    node(int _b, int _w):b(_b),w(_w){}
};
vector<node> edge[maxn];
int d[maxn][maxn], n, m, x;

void spfa(int k){
    for(int i=1; i<=n; i++) d[k][i]=inf;
    d[k][k]=0;
    priority_queue<P, vector<P>, greater<P> > q;
    q.push(P(0, k));
    while(!q.empty()){
        P t = q.top(); q.pop();
        int v = t.second;
        if(d[k][v]<t.first) continue;
        for(int i=0; i<edge[v].size(); i++){
            node s=edge[v][i];
            if(d[k][s.b]>s.w+d[k][v]){
                d[k][s.b]=s.w+d[k][v];
                q.push(P(d[k][v], s.b));
            }
        }
    }
}

int main(){
    while(~scanf("%d%d%d", &n, &m, &x)){
        for(int i=1; i<=m; i++){
            int a, b, c;
            scanf("%d%d%d", &a, &b, &c);
            edge[a].push_back(node(b, c));
        }
        for(int i=1; i<=n; i++)
            spfa(i);
        int ans=0;
        for(int i=1; i<=n; i++)
            ans=max(ans, d[i][x]+d[x][i]);
        printf("%d\n", ans);
    }
    return 0;
}
