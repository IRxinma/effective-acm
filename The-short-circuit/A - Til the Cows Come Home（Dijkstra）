#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cmath>
#include<cstring>
#include<queue>
#include<cstdlib>
#include<stack>
#include<climits>
#include<vector>
#include<string>
#include<map>
using namespace std;
const int maxn = 2010;
const int inf = 0x3f3f3f3f;
bool vis[maxn];
int pre[maxn], cost[maxn][maxn];
int t, n;
void Dijkstra(){
    int dist[maxn];
    for(int i=0; i<n; i++){
        dist[i]=inf; vis[i]=false; pre[i]=-1;
    }
    dist[0]=0;
    for(int j=0; j<n; j++){
        int k=-1;
        int Min=inf;
        for(int i=0; i<n; i++){
            if(!vis[i] && dist[i]<Min){
                Min=dist[i];
                k=i;
            }
        }
        if(k==-1) break;
        vis[k]=true;
        for(int i=0; i<n; i++){
            if(!vis[i] && dist[k]+cost[k][i]<dist[i]){
                dist[i]=dist[k]+cost[k][i];
                pre[i]=k;
            }
        }
    }
    printf("%d\n", dist[n-1]);
    return ;
}

int main(){
    while(~scanf("%d%d", &t, &n)){
        for(int i=0; i<n; i++)
        for(int j=0; j <n; j++){
            if(i==j) cost[i][j]=0;
            else cost[i][j]=inf;
        }
        for(int i=0; i<t; i++){
            int a, b, c;
            scanf("%d%d%d", &a, &b, &c);
            if(cost[a-1][b-1]>c)
                cost[a-1][b-1]=cost[b-1][a-1]=c;
        }
        Dijkstra();
    }
    return 0;
}
