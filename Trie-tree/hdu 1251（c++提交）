#include <iostream>
#include<cstring>
#include<algorithm>
#include<cstdio>
using namespace std;
const int maxn = 26;
struct Trie{
    int v;
    Trie *nxt[maxn];
};
Trie root;

void createTrie(char *str){
    int len=strlen(str);
    Trie *p=&root, *q;
    for(int i=0; i<len; ++i){
        int id=str[i]-'a';
        if(p->nxt[id]==NULL){
            q=(Trie *)malloc(sizeof(root));
            q->v=1;
            for(int j=0; j<maxn; ++j)
                q->nxt[j]=NULL;
            p->nxt[id]=q;
            p=p->nxt[id];
        }
        else{
            p->nxt[id]->v++;
            p=p->nxt[id];
        }
    }
}

int findTrie(char *str){
    int len=strlen(str);
    Trie *p=&root;
    for(int i=0; i<len; i++){
        int id=str[i]-'a';
        p=p->nxt[id];
        if(p==NULL) return 0;
    }
    return p->v;
}

void deal(Trie *T){
    if(T==NULL) return;
    for(int i=0; i<maxn; i++) if(T->nxt[i]!=NULL) deal(T->nxt[i]);
    free(T);
}

int main(){
    //freopen("input.txt", "r", stdin);
    char str[15];
    int i;
    for(i=0; i<26; ++i) root.nxt[i]=NULL;
    root.v=0;
    while(gets(str)&&str[0]!='\0') createTrie(str);
    while(~scanf("%s",str)) printf("%d\n", findTrie(str));
    return 0;
}
